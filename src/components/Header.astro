---
import Logo from "./Logo.astro"
import MenuIcon from "./icons/MenuIcon.astro"
import CloseIcon from "./icons/CloseIcon.astro"

const menu = [
  { href: "/", name: "Accueil" },
  // { href: "#about", name: " A propos" },
  { href: "#jobs", name: "Experiences" },
  { href: "#projects", name: "Projets" },
  { href: "#contact", name: "Contact" },
]
---

<!-- make bg when scroll is not on top -->
<div id="menu" class="fixed top-0 z-40 w-[100dvw] bg-white shadow">
  <div class="container flex justify-between py-2 md:py-6">
    <a href="/"><Logo /></a>
    <nav class="hidden md:block">
      <ul class="flex gap-6">
        {
          menu.map((link) => (
            <li>
              <a href={link.href}>{link.name}</a>
            </li>
          ))
        }
      </ul>
    </nav>
    <button class="md:hidden" onclick="toggleMenu()"><MenuIcon /></button>
  </div>
</div>
<div
  data-mobile-menu="closed"
  class="fixed inset-0 z-50 h-screen transition-transform duration-300 ease-in-out data-[mobile-menu=closed]:-translate-x-full"
>
  <button class="absolute right-0 top-0 mx-8 my-6" onclick="toggleMenu()"
    ><CloseIcon /></button
  >
  <nav class="h-full w-full bg-white">
    <ul class="flex h-full w-full flex-col items-center justify-center gap-6">
      {
        menu.map((link) => (
          <li onclick="toggleMenu()">
            <a href={link.href}>{link.name}</a>
          </li>
        ))
      }
    </ul>
  </nav>
</div>

<script is:inline>
  function toggleMenu() {
    const mobileMenu = document.querySelector("[data-mobile-menu]")
    const state = mobileMenu?.getAttribute("data-mobile-menu")
    mobileMenu?.setAttribute(
      "data-mobile-menu",
      state === "closed" ? "open" : "closed"
    )
  }

  // let lastKnownScrollPosition = 0
  // let ticking = false

  // function doSomething(scrollPos: number) {
  //   if (scrollPos !== 0) {
  //     menu?.classList.add("bg-white")
  //     menu?.classList.add("shadow")
  //     return
  //   }
  //   menu?.classList.remove("bg-white")
  //   menu?.classList.remove("shadow")
  // }

  // document.addEventListener(
  //   "scroll",
  //   (event) => {
  //     lastKnownScrollPosition = window.scrollY

  //     if (!ticking) {
  //       window.requestAnimationFrame(() => {
  //         doSomething(lastKnownScrollPosition)
  //         ticking = false
  //       })

  //       ticking = true
  //     }
  //   },
  //   { capture: true, passive: true }
  // )
</script>
